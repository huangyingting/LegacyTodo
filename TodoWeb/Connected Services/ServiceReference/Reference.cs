//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TodoWeb.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TodoItem", Namespace="http://schemas.datacontract.org/2004/07/TodoWCFService.Models")]
    [System.SerializableAttribute()]
    public partial class TodoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ITodoService")]
    public interface ITodoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetTodoItems", ReplyAction="http://tempuri.org/ITodoService/GetTodoItemsResponse")]
        TodoWeb.ServiceReference.TodoItem[] GetTodoItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetTodoItems", ReplyAction="http://tempuri.org/ITodoService/GetTodoItemsResponse")]
        System.Threading.Tasks.Task<TodoWeb.ServiceReference.TodoItem[]> GetTodoItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/CreateTodoItem", ReplyAction="http://tempuri.org/ITodoService/CreateTodoItemResponse")]
        void CreateTodoItem(TodoWeb.ServiceReference.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/CreateTodoItem", ReplyAction="http://tempuri.org/ITodoService/CreateTodoItemResponse")]
        System.Threading.Tasks.Task CreateTodoItemAsync(TodoWeb.ServiceReference.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/EditTodoItem", ReplyAction="http://tempuri.org/ITodoService/EditTodoItemResponse")]
        void EditTodoItem(TodoWeb.ServiceReference.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/EditTodoItem", ReplyAction="http://tempuri.org/ITodoService/EditTodoItemResponse")]
        System.Threading.Tasks.Task EditTodoItemAsync(TodoWeb.ServiceReference.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/DeleteTodoItem", ReplyAction="http://tempuri.org/ITodoService/DeleteTodoItemResponse")]
        void DeleteTodoItem(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/DeleteTodoItem", ReplyAction="http://tempuri.org/ITodoService/DeleteTodoItemResponse")]
        System.Threading.Tasks.Task DeleteTodoItemAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITodoServiceChannel : TodoWeb.ServiceReference.ITodoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TodoServiceClient : System.ServiceModel.ClientBase<TodoWeb.ServiceReference.ITodoService>, TodoWeb.ServiceReference.ITodoService {
        
        public TodoServiceClient() {
        }
        
        public TodoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TodoWeb.ServiceReference.TodoItem[] GetTodoItems() {
            return base.Channel.GetTodoItems();
        }
        
        public System.Threading.Tasks.Task<TodoWeb.ServiceReference.TodoItem[]> GetTodoItemsAsync() {
            return base.Channel.GetTodoItemsAsync();
        }
        
        public void CreateTodoItem(TodoWeb.ServiceReference.TodoItem item) {
            base.Channel.CreateTodoItem(item);
        }
        
        public System.Threading.Tasks.Task CreateTodoItemAsync(TodoWeb.ServiceReference.TodoItem item) {
            return base.Channel.CreateTodoItemAsync(item);
        }
        
        public void EditTodoItem(TodoWeb.ServiceReference.TodoItem item) {
            base.Channel.EditTodoItem(item);
        }
        
        public System.Threading.Tasks.Task EditTodoItemAsync(TodoWeb.ServiceReference.TodoItem item) {
            return base.Channel.EditTodoItemAsync(item);
        }
        
        public void DeleteTodoItem(string id) {
            base.Channel.DeleteTodoItem(id);
        }
        
        public System.Threading.Tasks.Task DeleteTodoItemAsync(string id) {
            return base.Channel.DeleteTodoItemAsync(id);
        }
    }
}
